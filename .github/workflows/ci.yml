name: CI

on:
  push:
    branches:
      - main
    paths:
      - "Dockerfile"
      - ".github/workflows/ci.yml"
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 6"

env:
  DOCKER_REPOSITORY: abcfy2/musl-cross-toolchain-ubuntu
  GHCR_REPOSITORY: ghcr.io/${{ github.repository_owner }}/musl-cross-toolchain-ubuntu
  QUAY_IO_REPOSITORY: quay.io/${{ github.repository_owner }}/musl-cross-toolchain-ubuntu

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64-unknown-linux-musl
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-musleabihf
          - armv7-unknown-linux-musleabi
          - armv7-unknown-linux-musleabihf
          - i586-unknown-linux-musl
          - i686-unknown-linux-musl
          - loongarch64-unknown-linux-musl
          - m68k-unknown-linux-musl
          - microblaze-xilinx-linux-musl
          - microblazeel-xilinx-linux-musl
          - mips-unknown-linux-musl
          - mips-unknown-linux-muslsf
          - mips64-unknown-linux-musl
          - mips64el-unknown-linux-musl
          - mipsel-unknown-linux-musl
          - mipsel-unknown-linux-muslsf
          - powerpc-unknown-linux-musl
          - powerpc64-unknown-linux-musl
          - riscv32-unknown-linux-musl
          - riscv64-unknown-linux-musl
          - s390x-ibm-linux-musl
          - sh4-multilib-linux-musl
          - x86_64-unknown-linux-musl
    steps:
      - name: Determine if push is needed
        run: |
          set -eo pipefail
          echo "GITHUB_EVENT_NAME = ${GITHUB_EVENT_NAME}"
          PUSH=true
          if [ "${GITHUB_EVENT_NAME}" = "schedule" ]; then
            REPO_URL="https://github.com/cross-tools/musl-cross"
            UPSTREAM_SHA256SUM="$(curl -sSLf --compressed "${REPO_URL}/releases/latest/download/${ARCH}.tar.xz.sha256")"
            DOWNSTREAM_SHA256SUM="$(docker run --pull=always --rm "${GHCR_REPOSITORY}:${ARCH}" cat /SHA256SUM.txt)" || true
            if [ "${UPSTREAM_SHA256SUM}" = "${DOWNSTREAM_SHA256SUM}" ]; then
              PUSH=false
            fi
          fi
          echo "PUSH = ${PUSH}"
          echo "PUSH=${PUSH}" >> $GITHUB_ENV
        env:
          ARCH: ${{ matrix.arch }}
      - uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: env.PUSH == 'true'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        if: env.PUSH == 'true'
        with:
          registry: ${{ env.GHCR_REPOSITORY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Quay.io
        uses: docker/login-action@v3
        if: env.PUSH == 'true'
        with:
          registry: ${{ env.QUAY_IO_REPOSITORY }}
          username: ${{ secrets.QUAY_IO_USERNAME }}
          password: ${{ secrets.QUAY_IO_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        if: env.PUSH == 'true'
        with:
          push: true
          pull: true
          file: Dockerfile
          build-args: |
            ARCH=${{ matrix.arch }}
          tags: ${{ env.DOCKER_REPOSITORY }}:${{ matrix.arch }},${{ env.GHCR_REPOSITORY }}:${{ matrix.arch }},${{ env.QUAY_IO_REPOSITORY }}:${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
